@model IndianArmyWeb.View_Models.StaffDutyUpVM

@{
    ViewBag.Title = "Edit Staff";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="main-card mb-3 card">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card-body">
            <h5 class="card-title">@ViewBag.Title</h5>
            <hr />
            <div class="position-relative row form-group">
                @Html.HiddenFor(model => model.StaffDutyId)
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownList("Category", (IEnumerable<SelectListItem>)ViewBag.Directorates, "-- Select --", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Appointment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Appointment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Appointment, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.TelephoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TelephoneNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tele No" } })
                    @Html.ValidationMessageFor(model => model.TelephoneNo, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Intercom, new { htmlAttributes = new { @class = "form-control", @placeholder = "Intercom No" } })
                    @Html.ValidationMessageFor(model => model.Intercom, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.EMailId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.EMailId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EMailId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.Duties, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Duties, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duties, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    @Html.EditorFor(model => model.Seniority, new { htmlAttributes = new { @class = "form-control", @placeholder = "Seniority" } })
                </div>
                @Html.LabelFor(model => model.StaffZone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownList("StaffZone", (IEnumerable<SelectListItem>)ViewBag.Locations, "-- Select --", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StaffZone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <label class="control-label col-md-2"></label>
                <div class="col-md-8">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}